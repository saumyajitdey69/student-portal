function hide_questions() {
    $(".faculty_feedback_div").hide();
    $("#feedback_comments_faculty").hide();
    $("#feedback_comments_course").hide();
    $("#t_submit").hide();
    $(".select-row").closest("tr").hide();
    $("#t1").closest("tr").show()
}

function scrollup() {
    $("html, body").animate({
        scrollTop: 0
    }, 600)
}

function clear_form() {
    for (i = 1; i <= 4; i++) {
        $("#comment" + i).val("")
    }
    questions = $("#tabs .table-hover").data("questions");
    for (i = 1; i <= questions; i++) {
        $("#t" + i).prop("selectedIndex", 0)
    }
}

function get_status() {
    listitem = $("#tabs tbody tr");
    i = 0;
    for (; i < listitem.length; i++) {
        if ($("#tabs .selected_course").is(listitem[i])) {
            break
        }
    }
    return i
}

function spell_check() {
    for (i = 1; i <=4; i++) {
    	if(!($Spelling.BinSpellCheckFields('comment'+i)))
    		return false;
    }
    return true
}

function show_error(e) {
    $("#info_div span").html(e);
    $("#info_div").show();
    setTimeout(function () {
        $("#info_div_success").hide()
    }, 4e3);
    scrollup()
}

function show_success(e) {
    $("#info_div_success span").html(e);
    $("#info_div_success").show();
    setTimeout(function () {
        $("#info_div_success").hide()
    }, 4e3);
    scrollup()
}
$(".select-row").on("change", function () {
    if ($(this).val() === "") {
        return
    }
    var e = $(this).closest("tr");
    if (e.is($("#feedback_course tbody tr").last())) {
        $("#feedback_comments_course").show();
        $(".faculty_feedback_div").show();
        $("#t16").closest("tr").show();
        return
    }
    if (e.is($("#feedback_faculty tbody tr").last())) {
        $("#feedback_comments_faculty").show();
        $("#t_submit").show();
        return
    }
    e.next().show()
});
var new_course_click = function () {
    var e = $(this).find(":nth-child(2)").html();
    var t = $(this).find(":nth-child(3)").html();
    if ($(this).data("status") == "1") {
        return 0
    }
    $("#tabs tbody tr").removeClass("selected_course");
    $(this).addClass("selected_course");
    var n = $(this).data("cfid");
    var r = $(this).find(":nth-child(4)").html();
    clear_form();
    hide_questions();
    $("#course-id").html(e);
    $("#course-name").html(t);
    $("#faculty-name").html(r);
    $("#tabs").hide();
    $("#t_img").hide();
    $(".breadcrumb").show();
    $("#navigation").show();
    $("#ques_theory").show();
    disableButton();
    return 1
};
$(".course_row").click(new_course_click);
$(".list").click(function () {
    $("#tabs tbody tr").removeClass("selected_course");
    $("#navigation").hide();
    $("#ques_theory").hide();
    $(".breadcrumb").hide();
    $("#tabs").show()
});
$(".next").click(function () {
    var e = $("#tabs tbody");
    var t = e.find(".selected_course");
    while (true) {
        if (t.is(e.find("tr").last())) {
            t.removeClass("selected_course");
            $(".list").triggerHandler("click");
            break
        }
        var n = t.next();
        if (n.data("status") == "0" && n.data("alloted") == "1") {
            n.triggerHandler("click");
            break
        }
        t = n
    }
});
$(".previous").click(function () {
    var e = $("#tabs tbody");
    var t = e.find(".selected_course");
    while (true) {
        if (t.is(e.find("tr").first())) {
            t.removeClass("selected_course");
            $(".list").triggerHandler("click");
            break
        }
        var n = t.prev();
        if (n.data("status") == "0" && n.data("alloted") == "1") {
            n.triggerHandler("click");
            break
        }
        t = n
    }
});
function notify(label_color,msg)
{
    $('.top-right').notify({
    message: { text: msg }, type: label_color,fadeOut: { enabled: true, delay: 3000 }
  }).show();
}
$("#t_submit").click(function () {
    if (spell_check() == false) {
        //show_error("Please check the comment fields again.");
        notify("danger","Please check the comment fields again. Remove Professor's name and words having red lines from the comments before submitting.");
        return
    }
    value = "";
    cfid = $("#tabs .selected_course").data("cfid");
    questions = $("#tabs .table-hover").data("questions");
    comment_size = $("#tabs .table-hover").data("commentsize");
    course_id = $("#course-id").html();
    course_name = $("#course-name").html();
    credits = $("#tabs .selected_course").data("credits");
    type = $("#tabs .selected_course").data("type");
    sec = $("#tabs .selected_course").data("sec");
    faculty_id = $("#tabs .selected_course").data("faculty-id");
    faculty_name = $("#faculty-name").html();
    var e = [];
    for (i = 1; i <= comment_size; i++) {
        if ($("#comment" + i).val() !== "") {
            e.push({
                type: i,
                content: $("#comment" + i).val()
            })
        }
    }
    for (i = 1; i <= questions; i++) {
        if ($("#t" + i + " option:selected").val() === "") {
            //show_error("All questions are mandatory.");
            notify("danger","All questions are mandatory.");
            return
        }
        value = value + $("#t" + i + " option:selected").val()
    }
    $.ajax({
        type: "POST",
        url: "feedback/submit_feedback",
        data: {
            value: value,
            cfid: cfid,
            comment: e,
            status: get_status(),
            course_id: course_id,
            course_name: course_name,
            type: type,
            credits: credits,
            sec: sec,
            faculty_name: faculty_name,
            faculty_id: faculty_id
        },
        beforeSend: function (e) {
            $("#t_submit").hide();
            $("#t_img").show()
        },
        success: function (e, t, n) {
            if (e == 2) {
                //show_error("All questions are mandatory.");
                notify("danger","All questions are mandatory.");
                return
            }
            if (e == 0) {
                //show_error("Feedback not submitted.Please try again later.");
                notify("danger","Feedback not submitted.Please try again later.");
                return
            }
            //show_success("Feedback Recorded Successfully");
            notify("success","Feedback Recorded Successfully");
            $("#tabs .selected_course").data("status", "1");
            var r = $("#tabs .selected_course :nth-child(5)");
            r.find(":nth-child(1)").removeClass("glyphicon glyphicon-remove");
            r.find(":nth-child(1)").addClass("glyphicon glyphicon-ok");
            r.find(":nth-child(1)").attr("title", "Feedback submitted");
            r.removeClass("text-danger");
            r.addClass("text-success");
            $(".next").trigger("click")
        },
        error: function (e) {}
    });
    $("#t_img").hide();
    $("#t_submit").show();
    scrollup()
});
function enableButton()
{
   		$('#t_submit').removeAttr('disabled');
}
function disableButton()
{
	$('#t_submit').attr("disabled", "disabled");
	
	var counter=60;
	var intervalID = setInterval(function() {
    counter--;
    if(counter == 0) 
    {
    	$('#t_submit').html(" S U B M I T ");
    	enableButton();
        clearInterval(intervalID);
    }
    else if(counter==1)
    {
    	$('#t_submit').html("You can submit feedback in " + counter.toString() + " second.");
    }
    else 
    {
        $('#t_submit').html("You can submit feedback in " + counter.toString() + " seconds.");
    }},1000);
}
$Spelling.SpellCheckAsYouType("comment1");
$Spelling.SpellCheckAsYouType("comment2");
$Spelling.SpellCheckAsYouType("comment3");
$Spelling.SpellCheckAsYouType("comment4");
$(document).ready(function () 
{
    var e = $("input, textarea, select, button");
    e.on("keydown", function (e) {
        if (e.keyCode == 9 || e.which == 9) {
            e.preventDefault()
        }
    });
    var _z = console;
    Object.defineProperty( window, "console", {
    get : function(){
        if( _z._commandLineAPI ){
        throw "Sorry, Can't exceute scripts!";
            }
        return _z; 
    },
    set : function(val){
        _z = val;
    }
    });
})
